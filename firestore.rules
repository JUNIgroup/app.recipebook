rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function checkCreateRev() {
      return request.resource.data.rev == 0 
        && request.resource.data.__lastUpdate == request.time
        && !('__deleted' in request.resource.data.keys())
      ;
    }

    function checkUpdateRev() {
      return request.resource.data.rev == resource.data.rev + 1  
        && request.resource.data.__lastUpdate == request.time
        && (!('__deleted' in request.resource.data.keys()) || request.resource.data.__deleted is bool)
      ;
    }

    function existBucket(bucketCollectionId, bucketId) {
      return exists(/databases/$(database)/documents/$(bucketCollectionId)/$(bucketId));
    }

    match /{bucketCollectionId}/{bucketId} {
      allow read;
      allow create: if checkCreateRev();
      allow update: if checkUpdateRev();
    }

    match /{bucketCollectionId}/{bucketId}/{collectionId}/{documentId} {
      allow read;
      allow create: if checkCreateRev() && existBucket(bucketCollectionId, bucketId);
      allow update: if checkUpdateRev() && existBucket(bucketCollectionId, bucketId);
    }

    // --------------------------------
    // Unit test specific rules
    // --------------------------------
    match /{document=**} {
      function isTestCaseDocument(segment) {
        return segment.matches('.*-spec(-.*)?');
      }

      allow read: if isTestCaseDocument(request.path[3]);
      allow write: if isTestCaseDocument(request.path[3]);
    }
  }
}
